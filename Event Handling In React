Event handling in React refers to the way in which React components handle user-generated events, such as mouse clicks, keyboard inputs, or touch events. React provides
a simple and intuitive way to handle events using its built-in event system.

In React, event handling is done by defining event handlers as functions that are bound to particular events. Event handlers are defined as methods within a React
component, and they are passed as props to the child components that need to handle those events.

Event handling in React is a way to respond to user actions like clicks, key presses, form submissions, etc.

Let's look at some of the examples : 

Handling Form Events :

import React from 'react';

class Form extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      name: '',
      email: ''
    };
  }

  handleNameChange = (event) => {
    this.setState({ name: event.target.value });
  }

  handleEmailChange = (event) => {
    this.setState({ email: event.target.value });
  }

  handleSubmit = (event) => {
    event.preventDefault();
    console.log('Name:', this.state.name);
    console.log('Email:', this.state.email);
  }

  render() {
    return (
      <form onSubmit={this.handleSubmit}>
        <label>
          Name:
          <input type="text" value={this.state.name} onChange={this.handleNameChange} />
        </label>
        <label>
          Email:
          <input type="email" value={this.state.email} onChange={this.handleEmailChange} />
        </label>
        <button type="submit">Submit</button>
      </form>
    );
  }
}

export default Form


Toggling visibility of elements


import React from 'react';

class ToggleMessage extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      show: false
    };
  }

  handleClick = () => {
    this.setState(prevState => ({
      show: !prevState.show
    }));
  }

  render() {
    return (
      <div>
        <button onClick={this.handleClick}>
          {this.state.show ? 'Hide' : 'Show'} Message
        </button>
        {this.state.show && <p>Hello, world!</p>}
      </div>
    );
  }
}

export default ToggleMessage;



